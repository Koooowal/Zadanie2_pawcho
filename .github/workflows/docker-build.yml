name: Build and Push Multi-Arch Docker Image

on:
  push:
    branches: [ "main" ]

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}
  CACHE_REPO: kooowal/cache-repo  # ← użyj swojego loginu DockerHub

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build image and store locally for scanning
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: false
        tags: ${{ env.IMAGE_NAME }}:latest
        cache-from: type=registry,ref=${{ env.CACHE_REPO }}:cache
        cache-to: type=registry,ref=${{ env.CACHE_REPO }}:cache,mode=max
        outputs: type=docker,dest=/tmp/image.tar

    - name: Scan image with Trivy
      uses: aquasecurity/trivy-action@v0.12.0
      with:
        image-ref: 'docker-archive:/tmp/image.tar'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'

    - name: Push image if scan passes
      if: success()
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ env.CACHE_REPO }}:cache
        cache-to: type=registry,ref=${{ env.CACHE_REPO }}:cache,mode=max
